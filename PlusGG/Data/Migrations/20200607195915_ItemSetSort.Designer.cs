// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlusGG.Data;

namespace PlusGG.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200607195915_ItemSetSort")]
    partial class ItemSetSort
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PlusGG.Data.Models.Champion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SummonerSpellDId")
                        .HasColumnType("int");

                    b.Property<int?>("SummonerSpellFId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SummonerSpellDId");

                    b.HasIndex("SummonerSpellFId");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("PlusGG.Data.Models.ChampionRunes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PrimaryMainRuneId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryRune1Id")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryRune2Id")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryRune3Id")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryRune1Id")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryRune2Id")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryRune3Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryMainRuneId");

                    b.HasIndex("PrimaryRune1Id");

                    b.HasIndex("PrimaryRune2Id");

                    b.HasIndex("PrimaryRune3Id");

                    b.HasIndex("SecondaryRune1Id");

                    b.HasIndex("SecondaryRune2Id");

                    b.HasIndex("SecondaryRune3Id");

                    b.ToTable("ChampionRunes");
                });

            modelBuilder.Entity("PlusGG.Data.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PlusGG.Data.Models.ItemSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MatchUpId")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MatchUpId");

                    b.ToTable("ItemSets");
                });

            modelBuilder.Entity("PlusGG.Data.Models.MainRunes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuneCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuneCategoryId");

                    b.ToTable("MainRunes");
                });

            modelBuilder.Entity("PlusGG.Data.Models.MatchUp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("MainChampionId")
                        .HasColumnType("int");

                    b.Property<bool>("StrongerEarly")
                        .HasColumnType("bit");

                    b.Property<bool>("StrongerLate")
                        .HasColumnType("bit");

                    b.Property<bool>("StrongerMid")
                        .HasColumnType("bit");

                    b.Property<int?>("VsChampionId")
                        .HasColumnType("int");

                    b.Property<double>("WinRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MainChampionId");

                    b.HasIndex("VsChampionId");

                    b.ToTable("MatchUps");
                });

            modelBuilder.Entity("PlusGG.Data.Models.RuneCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RuneCategories");
                });

            modelBuilder.Entity("PlusGG.Data.Models.Runes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelRune")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuneCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuneCategoryId");

                    b.ToTable("Runes");
                });

            modelBuilder.Entity("PlusGG.Data.Models.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChampionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpellType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("PlusGG.Data.Models.SummonerSpell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SummonerSpells");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlusGG.Data.Models.Champion", b =>
                {
                    b.HasOne("PlusGG.Data.Models.SummonerSpell", "SummonerSpellD")
                        .WithMany("ChampionD")
                        .HasForeignKey("SummonerSpellDId");

                    b.HasOne("PlusGG.Data.Models.SummonerSpell", "SummonerSpellF")
                        .WithMany("ChampionF")
                        .HasForeignKey("SummonerSpellFId");
                });

            modelBuilder.Entity("PlusGG.Data.Models.ChampionRunes", b =>
                {
                    b.HasOne("PlusGG.Data.Models.MainRunes", "PrimaryMainRune")
                        .WithMany("ChampionRunes")
                        .HasForeignKey("PrimaryMainRuneId");

                    b.HasOne("PlusGG.Data.Models.Runes", "PrimaryRune1")
                        .WithMany("PrimaryRune1")
                        .HasForeignKey("PrimaryRune1Id");

                    b.HasOne("PlusGG.Data.Models.Runes", "PrimaryRune2")
                        .WithMany("PrimaryRune2")
                        .HasForeignKey("PrimaryRune2Id");

                    b.HasOne("PlusGG.Data.Models.Runes", "PrimaryRune3")
                        .WithMany("PrimaryRune3")
                        .HasForeignKey("PrimaryRune3Id");

                    b.HasOne("PlusGG.Data.Models.Runes", "SecondaryRune1")
                        .WithMany("SecondaryRune1")
                        .HasForeignKey("SecondaryRune1Id");

                    b.HasOne("PlusGG.Data.Models.Runes", "SecondaryRune2")
                        .WithMany("SecondaryRune2")
                        .HasForeignKey("SecondaryRune2Id");

                    b.HasOne("PlusGG.Data.Models.Runes", "SecondaryRune3")
                        .WithMany("SecondaryRune3")
                        .HasForeignKey("SecondaryRune3Id");
                });

            modelBuilder.Entity("PlusGG.Data.Models.ItemSet", b =>
                {
                    b.HasOne("PlusGG.Data.Models.Item", "Item")
                        .WithMany("ItemSets")
                        .HasForeignKey("ItemId");

                    b.HasOne("PlusGG.Data.Models.MatchUp", "MatchUp")
                        .WithMany("ItemSets")
                        .HasForeignKey("MatchUpId");
                });

            modelBuilder.Entity("PlusGG.Data.Models.MainRunes", b =>
                {
                    b.HasOne("PlusGG.Data.Models.RuneCategories", "RuneCategory")
                        .WithMany("MainRunes")
                        .HasForeignKey("RuneCategoryId");
                });

            modelBuilder.Entity("PlusGG.Data.Models.MatchUp", b =>
                {
                    b.HasOne("PlusGG.Data.Models.ChampionRunes", "MainChampionRunes")
                        .WithOne("MatchUp")
                        .HasForeignKey("PlusGG.Data.Models.MatchUp", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlusGG.Data.Models.Champion", "MainChampion")
                        .WithMany("MatchUpsMain")
                        .HasForeignKey("MainChampionId");

                    b.HasOne("PlusGG.Data.Models.Champion", "VsChampion")
                        .WithMany("MatchUpsVs")
                        .HasForeignKey("VsChampionId");
                });

            modelBuilder.Entity("PlusGG.Data.Models.Runes", b =>
                {
                    b.HasOne("PlusGG.Data.Models.RuneCategories", "RuneCategory")
                        .WithMany("Runes")
                        .HasForeignKey("RuneCategoryId");
                });

            modelBuilder.Entity("PlusGG.Data.Models.Spell", b =>
                {
                    b.HasOne("PlusGG.Data.Models.Champion", "Champion")
                        .WithMany("Spells")
                        .HasForeignKey("ChampionId");
                });
#pragma warning restore 612, 618
        }
    }
}
